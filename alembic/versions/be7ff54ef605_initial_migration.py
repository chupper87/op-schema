"""Initial migration

Revision ID: be7ff54ef605
Revises:
Create Date: 2025-09-17 11:06:39.336369

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "be7ff54ef605"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "customers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("first_name", sa.String(length=100), nullable=False),
        sa.Column("last_name", sa.String(length=100), nullable=False),
        sa.Column("key_number", sa.Integer(), nullable=False),
        sa.Column("address", sa.String(length=255), nullable=False),
        sa.Column("care_level", sa.String(length=20), nullable=True),
        sa.Column("gender", sa.String(length=10), nullable=True),
        sa.Column("approved_hours", sa.Float(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("key_number"),
    )
    op.create_table(
        "measures",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("default_duration", sa.Integer(), nullable=False),
        sa.Column("text", sa.Text(), nullable=True),
        sa.Column("time_of_day", sa.String(length=20), nullable=True),
        sa.Column("time_flexibility", sa.String(length=20), nullable=True),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "schedule_archives",
        sa.Column("original_schedule_id", sa.Integer(), nullable=False),
        sa.Column("original_date", sa.Date(), nullable=False),
        sa.Column("shift", sa.String(length=20), nullable=False),
        sa.Column("employee_count", sa.Integer(), nullable=False),
        sa.Column("customer_count", sa.Integer(), nullable=False),
        sa.Column("measure_count", sa.Integer(), nullable=False),
        sa.Column("visit_count", sa.Integer(), nullable=False),
        sa.Column("completed_visit_count", sa.Integer(), nullable=False),
        sa.Column("canceled_visit_count", sa.Integer(), nullable=False),
        sa.Column("employees_data", sa.Text(), nullable=True),
        sa.Column("customers_data", sa.Text(), nullable=True),
        sa.Column("measures_data", sa.Text(), nullable=True),
        sa.Column("visits_data", sa.Text(), nullable=True),
        sa.Column(
            "archived_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("original_created", sa.DateTime(), nullable=False),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "schedules",
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("shift", sa.String(length=20), nullable=False),
        sa.Column(
            "created", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("username", sa.String(length=20), nullable=True),
        sa.Column("hashed_password", sa.Text(), nullable=True),
        sa.Column("reset_token", sa.String(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("registration_token", sa.String(), nullable=True),
        sa.Column("registration_completed", sa.Boolean(), nullable=False),
        sa.Column(
            "created", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("registration_token"),
        sa.UniqueConstraint("reset_token"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "care_visits",
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=False),
        sa.Column("duration", sa.Integer(), nullable=False),
        sa.Column("notes", sa.String(length=255), nullable=True),
        sa.Column(
            "created", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("schedule_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["schedule_id"],
            ["schedules.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "customer_measures",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("customer_id", sa.Integer(), nullable=False),
        sa.Column("measure_id", sa.Integer(), nullable=False),
        sa.Column("customer_duration", sa.Integer(), nullable=True),
        sa.Column("customer_frequency", sa.String(length=50), nullable=True),
        sa.Column("customer_notes", sa.Text(), nullable=True),
        sa.Column("customer_time_of_day", sa.String(length=20), nullable=True),
        sa.Column("customer_time_flexibility", sa.String(length=20), nullable=True),
        sa.Column("schedule_info", sa.Text(), nullable=True),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["customer_id"],
            ["customers.id"],
        ),
        sa.ForeignKeyConstraint(
            ["measure_id"],
            ["measures.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "employee",
        sa.Column("first_name", sa.String(length=100), nullable=True),
        sa.Column("last_name", sa.String(length=100), nullable=True),
        sa.Column("phone", sa.String(length=15), nullable=True),
        sa.Column("gender", sa.String(length=10), nullable=True),
        sa.Column("birth_date", sa.Date(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column(
            "role",
            sa.Enum(
                "EMPLOYEE",
                "ADMIN",
                "ASSISTANT_NURSE",
                "CARE_ASSISTANT",
                "USER",
                name="roletype",
            ),
            nullable=True,
        ),
        sa.Column("employment_type", sa.String(length=20), nullable=True),
        sa.Column("employment_degree", sa.Integer(), nullable=True),
        sa.Column("weekly_hours", sa.Integer(), nullable=True),
        sa.Column("vacation_days", sa.Integer(), nullable=True),
        sa.Column("is_summer_worker", sa.Boolean(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column(
            "created", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("phone"),
    )
    op.create_table(
        "schedule_customer",
        sa.Column("schedule_id", sa.Integer(), nullable=False),
        sa.Column("customer_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["customer_id"],
            ["customers.id"],
        ),
        sa.ForeignKeyConstraint(
            ["schedule_id"],
            ["schedules.id"],
        ),
        sa.PrimaryKeyConstraint("schedule_id", "customer_id", "id"),
    )
    op.create_table(
        "schedule_measure",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("schedule_id", sa.Integer(), nullable=False),
        sa.Column("measure_id", sa.Integer(), nullable=False),
        sa.Column("time_of_day", sa.String(length=20), nullable=True),
        sa.Column("custom_duration", sa.Integer(), nullable=True),
        sa.Column("notes", sa.String(length=255), nullable=True),
        sa.Column(
            "created", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["measure_id"],
            ["measures.id"],
        ),
        sa.ForeignKeyConstraint(
            ["schedule_id"],
            ["schedules.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "tokens",
        sa.Column("token", sa.String(), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("expire_date", sa.DateTime(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_tokens_token"), "tokens", ["token"], unique=True)
    op.create_table(
        "absences",
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.Column("start_date", sa.Date(), nullable=False),
        sa.Column("end_date", sa.Date(), nullable=False),
        sa.Column("absence_type", sa.String(length=20), nullable=False),
        sa.Column("notes", sa.String(length=255), nullable=True),
        sa.Column("hours", sa.Integer(), nullable=True),
        sa.Column(
            "created", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["employee.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "employee_care_visit",
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.Column("care_visit_id", sa.Integer(), nullable=False),
        sa.Column("is_primary", sa.Boolean(), nullable=False),
        sa.Column("notes", sa.String(length=255), nullable=True),
        sa.Column(
            "created", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["care_visit_id"],
            ["care_visits.id"],
        ),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["employee.id"],
        ),
        sa.PrimaryKeyConstraint("employee_id", "care_visit_id", "id"),
    )
    op.create_table(
        "measure_care_visit",
        sa.Column("measure_id", sa.Integer(), nullable=False),
        sa.Column("care_visit_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["care_visit_id"],
            ["care_visits.id"],
        ),
        sa.ForeignKeyConstraint(
            ["measure_id"],
            ["measures.id"],
        ),
        sa.PrimaryKeyConstraint("measure_id", "care_visit_id", "id"),
    )
    op.create_table(
        "schedule_employee",
        sa.Column("schedule_id", sa.Integer(), nullable=False),
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["employee.id"],
        ),
        sa.ForeignKeyConstraint(
            ["schedule_id"],
            ["schedules.id"],
        ),
        sa.PrimaryKeyConstraint("schedule_id", "employee_id", "id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("schedule_employee")
    op.drop_table("measure_care_visit")
    op.drop_table("employee_care_visit")
    op.drop_table("absences")
    op.drop_index(op.f("ix_tokens_token"), table_name="tokens")
    op.drop_table("tokens")
    op.drop_table("schedule_measure")
    op.drop_table("schedule_customer")
    op.drop_table("employee")
    op.drop_table("customer_measures")
    op.drop_table("care_visits")
    op.drop_table("users")
    op.drop_table("schedules")
    op.drop_table("schedule_archives")
    op.drop_table("measures")
    op.drop_table("customers")
    # ### end Alembic commands ###
